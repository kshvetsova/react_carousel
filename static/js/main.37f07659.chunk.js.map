{"version":3,"sources":["components/Carousel.jsx","components/CarouselSettings.jsx","App.js","index.js"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","currentPosition","containerWidth","className","style","width","transition","transform","marginLeft","map","image","key","src","alt","CarouselSettings","handleChange","htmlFor","type","id","name","min","max","value","onChange","e","target","App","state","imagesStart","field","setState","handleClickNext","maxPosition","length","position","push","splice","handleClickPrev","unshift","onClick","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.37f07659.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Carousel.scss';\n\nexport const Carousel = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n  currentPosition,\n}) => {\n  const containerWidth = itemWidth * frameSize;\n\n  return (\n    <div className=\"Carousel__section\">\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${containerWidth}px`,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transition: `transform ${animationDuration}ms`,\n            transform: `translateX(${currentPosition}px)`,\n            marginLeft: `${infinite\n              ? -(currentPosition + itemWidth * step)\n              : 0}px`,\n          }}\n        >\n          {images.map(image => (\n            <li key={image}>\n              <img\n                src={image}\n                alt={image}\n                style={{\n                  width: `${itemWidth}px`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n  step: PropTypes.number.isRequired,\n  frameSize: PropTypes.number.isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n  infinite: PropTypes.bool.isRequired,\n  currentPosition: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './CarouselSettings.scss';\nimport PropTypes from 'prop-types';\n\nexport const CarouselSettings = ({\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  handleChange,\n}) => (\n  <div className=\"inputs\">\n    <div className=\"step\">\n      <label htmlFor=\"step\">Step:</label>\n      <input\n        type=\"number\"\n        id=\"step\"\n        name=\"step\"\n        min=\"1\"\n        max=\"5\"\n        value={step}\n        onChange={(e => handleChange('step', e.target.value))}\n      />\n    </div>\n    <div className=\"frameSize\">\n      <label htmlFor=\"frameSize\">Frame:</label>\n      <input\n        type=\"number\"\n        id=\"frameSize\"\n        name=\"frameSize\"\n        min=\"1\"\n        max=\"5\"\n        value={frameSize}\n        onChange={(e => handleChange('frameSize', e.target.value))}\n      />\n    </div>\n    <div className=\"changeWidth\">\n      <label htmlFor=\"changeWidth\">Width:</label>\n      <input\n        type=\"number\"\n        id=\"changeWidth\"\n        name=\"changeWidth\"\n        min=\"50\"\n        max=\"130\"\n        value={itemWidth}\n        onChange={(e => handleChange('itemWidth', e.target.value))}\n      />\n    </div>\n    <div className=\"animation\">\n      <label htmlFor=\"animation\">Duration:</label>\n      <input\n        type=\"number\"\n        id=\"animation\"\n        name=\"animation\"\n        min=\"0\"\n        max=\"3000\"\n        step=\"250\"\n        value={animationDuration}\n        onChange={(e => handleChange('animationDuration', e.target.value))}\n      />\n    </div>\n    <div className=\"infinite\">\n      <label htmlFor=\"infinite\">Infinite:</label>\n      <input\n        type=\"checkbox\"\n        id=\"infinite\"\n        name=\"infinite\"\n        className=\"checkbox\"\n        onChange={(e => handleChange('infinite'))}\n      />\n    </div>\n  </div>\n);\n\nCarouselSettings.propTypes = {\n  step: PropTypes.number.isRequired,\n  frameSize: PropTypes.number.isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\nimport { CarouselSettings } from './components/CarouselSettings';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    imagesStart: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n    currentPosition: 0,\n    handleChange: (field, value) => {\n      const { infinite, imagesStart } = this.state;\n\n      this.setState(state => ({ [field]: +value || !state.infinite }));\n      if (infinite) {\n        this.setState({\n          images: [\n            ...imagesStart,\n          ],\n          currentPosition: 0,\n        });\n      }\n    },\n  };\n\n  handleClickNext = () => {\n    const {\n      images,\n      itemWidth,\n      step,\n      frameSize,\n      infinite,\n      currentPosition,\n    } = this.state;\n    const maxPosition = (images.length - frameSize) * itemWidth;\n    let position = currentPosition - itemWidth * step;\n\n    if (-position > maxPosition && !infinite) {\n      position = -maxPosition;\n    }\n\n    if (infinite) {\n      images.push(...images.splice(0, step));\n    }\n\n    this.setState({ currentPosition: position });\n  };\n\n  handleClickPrev = () => {\n    const {\n      images,\n      itemWidth,\n      step,\n      infinite,\n      currentPosition,\n    } = this.state;\n    let position = currentPosition + itemWidth * step;\n\n    if (position > 0 && !infinite) {\n      position = 0;\n    }\n\n    if (infinite) {\n      images.unshift(...images.splice(-step));\n    }\n\n    this.setState({ currentPosition: position });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Carousel</h1>\n        <div className=\"container\">\n          <button\n            type=\"button\"\n            className=\"button prev\"\n            onClick={this.handleClickPrev}\n          >\n            {`\\u{1F448}`}\n          </button>\n          <Carousel {...this.state} />\n          <button\n            type=\"button\"\n            className=\"button next\"\n            onClick={this.handleClickNext}\n          >\n            {`\\u{1F449}`}\n          </button>\n        </div>\n        <CarouselSettings {...this.state} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}